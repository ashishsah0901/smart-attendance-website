import Head from "next/head";
import React, { createRef, useEffect, useRef, useState } from "react";
import { LockOutlined, UserOutlined } from "@ant-design/icons";
import { Button, Form, Input } from "antd";
import Link from "next/link";
import "../utils/firebase";
import axios from "axios";
import { useRouter } from "next/router";
import { decrypt, encrypt } from "../utils/crypto";
import Image from "next/image";

export default function Home() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const router = useRouter();
  const formRef = useRef<any>();
  const onFinish = (values: any) => {
    axios
      .post(
        "http://localhost:3000/api/login/teacher",
        {
          email: values.email,
          password: values.password,
        },
        {
          headers: {
            "Content-Type": "application/json",
          },
        }
      )
      .then((value: any) => {
        const email = values.email;
        const passwordEncrypted = encrypt(values.password);
        const id = value.data.id;
        localStorage.setItem("email", email);
        localStorage.setItem("password", passwordEncrypted);
        localStorage.setItem("id", id);
        router.push(`/teacher`);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  useEffect(() => {
    if (localStorage.getItem("email") === null || localStorage.getItem("password") === null || localStorage.getItem("id") === null) {
      return;
    }
    router.push("/teacher");
    const oldEmail = localStorage.getItem("email")!!;
    const oldPassword = decrypt(localStorage.getItem("password")!!);
    setEmail(oldEmail);
    setPassword(oldPassword);
    formRef.current.setFieldsValue({
      email: oldEmail,
      password: oldPassword,
    });
  }, [router]);

  return (
    <>
      <Head>
        <title>Login - Present Ma'am</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col justify-center align-center m-auto h-screen max-w-2xl">
        <Image src="./logo-white.svg" alt="./logo-no-background.svg" width={300} height={300} className="mx-auto" />
        <Form ref={formRef} name="normal_login" className="login-form flex flex-col justify-center max-w-fit mx-auto" initialValues={{ email: email, password: password }} onFinish={onFinish}>
          <Form.Item
            name="email"
            rules={[
              {
                type: "email",
                message: "The input is not valid E-mail!",
              },
              {
                required: true,
                message: "Please input your E-mail!",
              },
            ]}
          >
            <Input prefix={<UserOutlined className="site-form-item-icon" />} placeholder="Email" value={email} />
          </Form.Item>
          <Form.Item name="password" rules={[{ required: true, message: "Please input your Password!" }]}>
            <Input prefix={<LockOutlined className="site-form-item-icon" />} type="password" placeholder="Password" />
          </Form.Item>
          <Form.Item>
            <Button type="primary" htmlType="submit" className="login-form-button bg-[#1677ff] text-white flex justify-center mx-a">
              Log in
            </Button>
            <div className="mt-3">
              Or{" "}
              <Link className="ml-1 underline text-[#1677ff]" href="/register">
                Register!
              </Link>
            </div>
          </Form.Item>
        </Form>
      </div>
    </>
  );
}
